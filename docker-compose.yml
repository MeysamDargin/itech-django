services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8001:8000"
    depends_on:
      - postgres
      - mongodb
      - redis
    env_file:
      - .env
    environment:
      SERVICE_TYPE: "web"

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - redis
      - postgres
      - mongodb
    env_file:
      - .env
    environment:
      SERVICE_TYPE: "worker"

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - redis
      - postgres
      - mongodb
    env_file:
      - .env
    environment:
      SERVICE_TYPE: "beat"

  postgres:
    image: postgres:14
    restart: always
    volumes:
      - itech_postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"

  mongodb:
    image: mongo:6
    restart: always
    command: mongod --bind_ip_all --auth
    volumes:
      - itech_mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    env_file:
      - .env
    ports:
      - "27017:27017"

  redis:
    image: redis:6
    restart: always
    ports:
      - "6379:6379"

volumes:
  itech_postgres_data:
    name: itech_postgres_data
  itech_mongodb_data:
    name: itech_mongodb_data
  itech_media_volume:
    name: itech_media_volume
  itech_static_volume:
    name: itech_static_volume
